name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.job }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    name: 🏗️ Build with ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🪄 Installing pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - name: 🗂️ Getting pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: ♻️ Setting up pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📥 Installing project dependencies
        run: pnpm install --no-frozen-lockfile

      - name: 📦 Building project
        run: npx next build

  test:
    strategy:
      matrix:
        node-version: [18.x]

    name: 🧪 Run all tests
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Retrieve Git history, needed to verify commits

      - name: ⎔ Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🪄 Installing pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - name: 🗂️ Getting pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: ♻️ Setting up pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📥 Installing project dependencies
        run: pnpm install --no-frozen-lockfile

      - if: github.event_name == 'pull_request'
        name: ✅ Validate all commits from PR
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: 🔬 Linting
        run: pnpm lint

      - name: 🔎 Type checking
        run: pnpm typecheck

      - name: 🃏 Run unit tests (Jest)
        run: pnpm test

      - name: 🏕️ Run storybook tests
        run: pnpm test:storybook

      - name: 🎭 Run e2e tests (Playwright)
        run: pnpm test:e2e:headless
